{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sambh\\\\Downloads\\\\React-Image-compressor\\\\src\\\\components\\\\ImageCompressor.jsx\";\nimport React from \"react\";\nimport imageCompression from \"browser-image-compression\";\nimport ImgProfile from \"./final.png\";\nimport Card from \"react-bootstrap/Card\";\n\nclass imageCompressor extends React.Component {\n  constructor() {\n    super();\n\n    this.handle = e => {\n      const imageFile = e.target.files[0];\n      this.setState({\n        originalLink: URL.createObjectURL(imageFile),\n        originalImage: imageFile,\n        outputFileName: imageFile.name,\n        uploadImage: true\n      });\n    };\n\n    this.changeValue = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.click = e => {\n      e.preventDefault();\n      const options = {\n        maxSizeMB: 2,\n        maxWidthOrHeight: 2048,\n        initialQuality: 0.5,\n        useWebWorker: true\n      };\n\n      if (options.maxSizeMB >= this.state.originalImage.size / 200) {\n        alert(\"Bring a bigger image\");\n        return 0;\n      }\n\n      let output;\n      imageCompression(this.state.originalImage, options).then(x => {\n        output = x;\n        const downloadLink = URL.createObjectURL(output);\n        this.setState({\n          compressedLink: downloadLink\n        });\n      });\n      this.setState({\n        clicked: true\n      });\n      return 1;\n    };\n\n    this.state = {\n      compressedLink: \"https://allcompressimage.com/static/media/file-upload-1280x640.png\",\n      originalImage: \"\",\n      originalLink: \"\",\n      clicked: false,\n      uploadImage: false\n    };\n    this.imageStyle = {\n      height: \"213px\",\n      width: \"400px\",\n      borderRadius: \"2px\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"m-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-dark text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"wrapper\",\n      class: \"width\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"header-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"header-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"logo\",\n      src: ImgProfile,\n      width: \"15%\",\n      alt: \"LOGO\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"logo_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"100% \", React.createElement(\"span\", {\n      className: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Free\"), \" and Fast\"), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Select .jpg , .jpeg , .png , .svg , .gif images from you device. Wait for the compression to finish.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Download compressed images very easily and quick.\"))))))), React.createElement(\"hr\", {\n      className: \"line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xl-4 col-lg-4 col-md-12 col-sm-12 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.state.uploadImage ? React.createElement(Img, {\n      style: this.imageStyle,\n      url: this.state.originalLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }) : React.createElement(Img, {\n      style: this.imageStyle,\n      url: \"https://allcompressimage.com/static/media/file-upload-1280x640.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(Button, {\n      handle: this.handle,\n      input: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-xl-4 col-lg-4 col-md-12  mt-3 col-sm-12 d-flex justify-content-center align-items-baseline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"comStyle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, this.state.outputFileName ? React.createElement(\"button\", {\n      type: \"button\",\n      className: \" btn btn-dark\",\n      onClick: e => this.click(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Compress\") : React.createElement(React.Fragment, null))), React.createElement(\"div\", {\n      className: \"col-xl-4 col-lg-4 col-md-12 col-sm-12 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Img, {\n      url: this.state.compressedLink,\n      style: this.imageStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), this.state.clicked ? React.createElement(Button, {\n      href: this.state.compressedLink,\n      download: this.state.outputFileName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })\n    /* <div className=\"d-flex justify-content-center\">\r\n      <a\r\n        href={this.state.compressedLink}\r\n    \n        download={this.state.outputFileName}\r\n        className=\"mt-4 btn btn-dark w-75\"\r\n      >\r\n        Download\r\n      </a>\r\n    </div> */\n    : React.createElement(React.Fragment, null))), React.createElement(\"hr\", {\n      className: \"line2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default imageCompressor;\n\nconst Img = props => React.createElement(\"div\", {\n  className: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 167\n  },\n  __self: this\n}, React.createElement(Card.Img, {\n  className: \" tt imageStyle\",\n  style: props.imageStyle,\n  variant: \"top\",\n  src: props.url,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 168\n  },\n  __self: this\n}));\n\nconst Button = props => React.createElement(\"div\", {\n  className: \"choose\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 179\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"d-flex justify-content-center\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 180\n  },\n  __self: this\n}, props.input ? React.createElement(\"input\", {\n  type: \"file\",\n  accept: \"image/*\",\n  style: {\n    marginLeft: \"5%\"\n  },\n  className: \"mt-4 btn btn-dark w-75\",\n  onChange: e => props.handle(e),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 182\n  },\n  __self: this\n}) : React.createElement(\"a\", {\n  href: props.href,\n  download: props.download,\n  className: \"mt-4 btn btn-dark w-75\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 189\n  },\n  __self: this\n}, \"Download\")));","map":{"version":3,"sources":["C:/Users/sambh/Downloads/React-Image-compressor/src/components/ImageCompressor.jsx"],"names":["React","imageCompression","ImgProfile","Card","imageCompressor","Component","constructor","handle","e","imageFile","target","files","setState","originalLink","URL","createObjectURL","originalImage","outputFileName","name","uploadImage","changeValue","value","click","preventDefault","options","maxSizeMB","maxWidthOrHeight","initialQuality","useWebWorker","state","size","alert","output","then","x","downloadLink","compressedLink","clicked","imageStyle","height","width","borderRadius","render","Img","props","url","Button","input","marginLeft","href","download"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport imageCompression from \"browser-image-compression\";\r\nimport ImgProfile from \"./final.png\";\r\n\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nclass imageCompressor extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n compressedLink:\r\n        \"https://allcompressimage.com/static/media/file-upload-1280x640.png\",\r\n      originalImage: \"\",\r\n      originalLink: \"\",\r\n      clicked: false,\r\n      uploadImage: false\r\n      \r\n    };\r\n    this.imageStyle={\r\n      height:\"213px\",\r\n      width:\"400px\",\r\n      borderRadius:\"2px\",\r\n    }\r\n    \r\n  }\r\n  \r\n  handle = e => {\r\n    const imageFile = e.target.files[0];\r\n    this.setState({\r\n      originalLink: URL.createObjectURL(imageFile),\r\n      originalImage: imageFile,\r\n      outputFileName: imageFile.name,\r\n      uploadImage: true\r\n    });\r\n  };\r\n  \r\n  changeValue = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  click = e => {\r\n    e.preventDefault();\r\n\r\n    const options = {\r\n      maxSizeMB: 2,\r\n      maxWidthOrHeight: 2048,\r\n      initialQuality: 0.5,\r\n      useWebWorker: true\r\n     \r\n    };\r\n   \r\n    if (options.maxSizeMB >= this.state.originalImage.size / 200) {\r\n      alert(\"Bring a bigger image\");\r\n      return 0;\r\n    }\r\n   \r\n    let output;\r\n    imageCompression(this.state.originalImage, options).then(x => {\r\n      output = x;\r\n\r\n      const downloadLink = URL.createObjectURL(output);\r\n      this.setState({\r\n        compressedLink: downloadLink\r\n      });\r\n    });\r\n\r\n    this.setState({ clicked: true });\r\n    return 1;\r\n  };\r\n \r\n  render() {\r\n    return (\r\n      \r\n      <div className=\"m-5\">\r\n       \r\n<div className=\"text-dark text-center\">\r\n<div id=\"wrapper\" class=\"width\">\r\n\r\n<div id=\"header-wrapper\">\r\n    <div id=\"header\">\r\n        <div id=\"header-left\">\r\n        <img id=\"logo\" src={ImgProfile}  width=\"15%\" alt =\"LOGO\"/>\r\n        <h1 className=\"logo_text\">100% <span className=\"red\">Free</span> and Fast</h1>\r\n            <ol>\r\n                <li>Select .jpg , .jpeg , .png , .svg , .gif images from you device. Wait for the compression to finish.</li>\r\n                <li>Download compressed images very easily and quick.</li>\r\n            </ol>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            \r\n        </div>\r\n      <hr className=\"line\"></hr>\r\n      <br/>\r\n        <div className=\"row mt-2\">\r\n        <div className=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mt-3\">\r\n            {this.state.uploadImage ? (\r\n              <Img\r\n                 style={this.imageStyle}\r\n                url={this.state.originalLink}\r\n              ></Img>\r\n            ) : (\r\n              <Img\r\n              style={this.imageStyle}\r\n                url=\"https://allcompressimage.com/static/media/file-upload-1280x640.png\"\r\n              ></Img>\r\n            )}\r\n                <Button handle={this.handle} input={true}/>\r\n             </div>\r\n\r\n          <div className=\"col-xl-4 col-lg-4 col-md-12  mt-3 col-sm-12 d-flex justify-content-center align-items-baseline\">\r\n            <br />\r\n            <div className=\"comStyle\">\r\n            {this.state.outputFileName ? (\r\n              <button\r\n                type=\"button\"\r\n                className=\" btn btn-dark\"\r\n                \r\n                onClick={e => this.click(e)}\r\n              >\r\n                Compress\r\n              </button>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            </div>\r\n          </div>\r\n            \r\n          <div className=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mt-3\">\r\n             <Img url={this.state.compressedLink} style={this.imageStyle} />\r\n             {this.state.clicked ? (\r\n                \r\n                   <Button  href={this.state.compressedLink}  download={this.state.outputFileName}/>\r\n               /* <div className=\"d-flex justify-content-center\">\r\n                 <a\r\n                   href={this.state.compressedLink}\r\n              \r\n                   download={this.state.outputFileName}\r\n                   className=\"mt-4 btn btn-dark w-75\"\r\n                 >\r\n                   Download\r\n                 </a>\r\n               </div> */\r\n               \r\n             ) : (\r\n               <></>\r\n             )}\r\n           </div>\r\n        </div>\r\n       \r\n        <hr className=\"line2\"></hr>\r\n  \r\n       \r\n          \r\n      </div>\r\n    \r\n    );\r\n    \r\n  }\r\n}\r\n\r\nexport default imageCompressor;\r\n\r\nconst Img = (props) => (\r\n  <div className=\"\">\r\n  <Card.Img \r\n            className=\" tt imageStyle\"\r\n            style={props.imageStyle}\r\n            variant=\"top\" \r\n            src={props.url}>\r\n\r\n            </Card.Img>\r\n            </div>\r\n)\r\nconst Button = (props) => (\r\n  \r\n  <div className=\"choose\">     \r\n             <div className=\"d-flex justify-content-center\">\r\n               {props.input ?\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                style={{marginLeft:\"5%\"}}\r\n               className=\"mt-4 btn btn-dark w-75\"\r\n                onChange={e => props.handle(e)}\r\n              />\r\n              :  <a\r\n              href={props.href}\r\n         \r\n              download={props.download}\r\n              className=\"mt-4 btn btn-dark w-75\"\r\n            >\r\n              Download\r\n            </a>\r\n              }\r\n            </div>\r\n            </div>\r\n);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}