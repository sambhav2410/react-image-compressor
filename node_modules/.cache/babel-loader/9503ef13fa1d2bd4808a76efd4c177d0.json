{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sambh\\\\Downloads\\\\React-Image-compressor\\\\src\\\\components\\\\ImageCompressor.jsx\";\n\n/* eslint-disable react/prop-types */\nimport React from \"react\";\nimport imageCompression from \"browser-image-compression\";\nimport Card from \"react-bootstrap/Card\";\nimport ImgProfile from \"./final.png\";\n\nclass imageCompressor extends React.Component {\n  constructor() {\n    super();\n\n    this.handle = e => {\n      const imageFile = e.target.files[0];\n      this.setState({\n        originalLink: URL.createObjectURL(imageFile),\n        originalImage: imageFile,\n        outputFileName: imageFile.name,\n        uploadImage: true\n      });\n    };\n\n    this.changeValue = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.click = e => {\n      e.preventDefault();\n      const options = {\n        maxSizeMB: 2,\n        maxWidthOrHeight: 2048,\n        initialQuality: 0.5,\n        useWebWorker: true\n      };\n\n      if (options.maxSizeMB >= this.state.originalImage.size / 200) {\n        alert(\"Bring a bigger image\");\n        return 0;\n      }\n\n      let output;\n      imageCompression(this.state.originalImage, options).then(x => {\n        output = x;\n        const downloadLink = URL.createObjectURL(output);\n        this.setState({\n          compressedLink: downloadLink\n        });\n      });\n      this.setState({\n        clicked: true\n      });\n      return 1;\n    };\n\n    this.state = {\n      compressedLink: \"https://allcompressimage.com/static/media/file-upload-1280x640.png\",\n      originalImage: \"\",\n      originalLink: \"\",\n      clicked: false,\n      uploadImage: false\n    };\n    this.imageStyle = {\n      height: \"213px\",\n      width: \"400px\",\n      borderRadius: \"2px\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"m-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-dark text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"wrapper\",\n      className: \"width\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"header-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"header-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"logo\",\n      src: ImgProfile,\n      width: \"15%\",\n      alt: \"LOGO\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"logo_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"100% \", React.createElement(\"span\", {\n      className: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Free\"), \" and Fast\"), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Select .jpg , .jpeg , .png , .svg , .gif images from you device. Wait for the compression to finish.\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Download compressed images very easily and quick.\"))))))), React.createElement(\"hr\", {\n      className: \"line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xl-4 col-lg-4 col-md-12 col-sm-12 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.state.uploadImage ? React.createElement(Img, {\n      style: this.imageStyle,\n      url: this.state.originalLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }) : React.createElement(Img, {\n      style: this.imageStyle,\n      url: \"https://allcompressimage.com/static/media/file-upload-1280x640.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(Button, {\n      handle: this.handle,\n      input: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-xl-4 col-lg-4 col-md-12  mt-3 col-sm-12 d-flex justify-content-center align-items-baseline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"comStyle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, this.state.outputFileName ? React.createElement(\"button\", {\n      type: \"button\",\n      className: \" btn btn-dark\",\n      onClick: e => this.click(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Compress\") : React.createElement(React.Fragment, null))), React.createElement(\"div\", {\n      className: \"col-xl-4 col-lg-4 col-md-12 col-sm-12 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Img, {\n      url: this.state.compressedLink,\n      style: this.imageStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), this.state.clicked ? React.createElement(Button, {\n      href: this.state.compressedLink,\n      download: this.state.outputFileName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }) :\n    /* <div className=\"d-flex justify-content-center\">\r\n       <a\r\n         href={this.state.compressedLink}\r\n    \r\n         download={this.state.outputFileName}\r\n         className=\"mt-4 btn btn-dark w-75\"\r\n       >\r\n         Download\r\n       </a>\r\n     </div> */\n    React.createElement(React.Fragment, null))), React.createElement(\"hr\", {\n      className: \"line2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default imageCompressor;\n\nconst Img = props => React.createElement(\"div\", {\n  className: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 158\n  },\n  __self: this\n}, React.createElement(Card.Img, {\n  className: \" tt imageStyle\",\n  style: props.imageStyle,\n  variant: \"top\",\n  src: props.url,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 159\n  },\n  __self: this\n}));\n\nconst Button = props => React.createElement(\"div\", {\n  className: \"choose\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 168\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"d-flex justify-content-center\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 169\n  },\n  __self: this\n}, props.input ? React.createElement(\"input\", {\n  type: \"file\",\n  accept: \"image/*\",\n  style: {\n    marginLeft: \"5%\"\n  },\n  className: \"mt-4 btn btn-dark w-75\",\n  onChange: e => props.handle(e),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 171\n  },\n  __self: this\n}) : React.createElement(\"a\", {\n  href: props.href,\n  download: props.download,\n  className: \"mt-4 btn btn-dark w-75\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 179\n  },\n  __self: this\n}, \"Download\")));","map":{"version":3,"sources":["C:/Users/sambh/Downloads/React-Image-compressor/src/components/ImageCompressor.jsx"],"names":["React","imageCompression","Card","ImgProfile","imageCompressor","Component","constructor","handle","e","imageFile","target","files","setState","originalLink","URL","createObjectURL","originalImage","outputFileName","name","uploadImage","changeValue","value","click","preventDefault","options","maxSizeMB","maxWidthOrHeight","initialQuality","useWebWorker","state","size","alert","output","then","x","downloadLink","compressedLink","clicked","imageStyle","height","width","borderRadius","render","Img","props","url","Button","input","marginLeft","href","download"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\n\r\nimport imageCompression from \"browser-image-compression\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport ImgProfile from \"./final.png\";\r\n\r\nclass imageCompressor extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      compressedLink:\r\n        \"https://allcompressimage.com/static/media/file-upload-1280x640.png\",\r\n      originalImage: \"\",\r\n      originalLink: \"\",\r\n      clicked: false,\r\n      uploadImage: false\r\n    };\r\n    this.imageStyle = {\r\n      height: \"213px\",\r\n      width: \"400px\",\r\n      borderRadius: \"2px\"\r\n    };\r\n  }\r\n\r\n  handle = e => {\r\n    const imageFile = e.target.files[0];\r\n    this.setState({\r\n      originalLink: URL.createObjectURL(imageFile),\r\n      originalImage: imageFile,\r\n      outputFileName: imageFile.name,\r\n      uploadImage: true\r\n    });\r\n  };\r\n\r\n  changeValue = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  click = e => {\r\n    e.preventDefault();\r\n\r\n    const options = {\r\n      maxSizeMB: 2,\r\n      maxWidthOrHeight: 2048,\r\n      initialQuality: 0.5,\r\n      useWebWorker: true\r\n    };\r\n\r\n    if (options.maxSizeMB >= this.state.originalImage.size / 200) {\r\n      alert(\"Bring a bigger image\");\r\n      return 0;\r\n    }\r\n\r\n    let output;\r\n    imageCompression(this.state.originalImage, options).then(x => {\r\n      output = x;\r\n\r\n      const downloadLink = URL.createObjectURL(output);\r\n      this.setState({\r\n        compressedLink: downloadLink\r\n      });\r\n    });\r\n\r\n    this.setState({ clicked: true });\r\n    return 1;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"m-5\">\r\n        <div className=\"text-dark text-center\">\r\n          <div id=\"wrapper\" className=\"width\">\r\n            <div id=\"header-wrapper\">\r\n              <div id=\"header\">\r\n                <div id=\"header-left\">\r\n                  <img id=\"logo\" src={ImgProfile} width=\"15%\" alt=\"LOGO\" />\r\n                  <h1 className=\"logo_text\">\r\n                    100% <span className=\"red\">Free</span> and Fast\r\n                  </h1>\r\n                  <ol>\r\n                    <li>\r\n                      Select .jpg , .jpeg , .png , .svg , .gif images from you\r\n                      device. Wait for the compression to finish.\r\n                    </li>\r\n                    <li>Download compressed images very easily and quick.</li>\r\n                  </ol>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr className=\"line\" />\r\n        <br />\r\n        <div className=\"row mt-2\">\r\n          <div className=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mt-3\">\r\n            {this.state.uploadImage ? (\r\n              <Img style={this.imageStyle} url={this.state.originalLink} />\r\n            ) : (\r\n              <Img\r\n                style={this.imageStyle}\r\n                url=\"https://allcompressimage.com/static/media/file-upload-1280x640.png\"\r\n              />\r\n            )}\r\n            <Button handle={this.handle} input />\r\n          </div>\r\n\r\n          <div className=\"col-xl-4 col-lg-4 col-md-12  mt-3 col-sm-12 d-flex justify-content-center align-items-baseline\">\r\n            <br />\r\n            <div className=\"comStyle\">\r\n              {this.state.outputFileName ? (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\" btn btn-dark\"\r\n                  onClick={e => this.click(e)}\r\n                >\r\n                  Compress\r\n                </button>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mt-3\">\r\n            <Img url={this.state.compressedLink} style={this.imageStyle} />\r\n            {this.state.clicked ? (\r\n              <Button\r\n                href={this.state.compressedLink}\r\n                download={this.state.outputFileName}\r\n              />\r\n            ) : (\r\n              /* <div className=\"d-flex justify-content-center\">\r\n                 <a\r\n                   href={this.state.compressedLink}\r\n              \r\n                   download={this.state.outputFileName}\r\n                   className=\"mt-4 btn btn-dark w-75\"\r\n                 >\r\n                   Download\r\n                 </a>\r\n               </div> */\r\n\r\n              <></>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <hr className=\"line2\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default imageCompressor;\r\n\r\nconst Img = props => (\r\n  <div className=\"\">\r\n    <Card.Img\r\n      className=\" tt imageStyle\"\r\n      style={props.imageStyle}\r\n      variant=\"top\"\r\n      src={props.url}\r\n    ></Card.Img>\r\n  </div>\r\n);\r\nconst Button = props => (\r\n  <div className=\"choose\">\r\n    <div className=\"d-flex justify-content-center\">\r\n      {props.input ? (\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          style={{ marginLeft: \"5%\" }}\r\n          className=\"mt-4 btn btn-dark w-75\"\r\n          onChange={e => props.handle(e)}\r\n        />\r\n      ) : (\r\n        <a\r\n          href={props.href}\r\n          download={props.download}\r\n          className=\"mt-4 btn btn-dark w-75\"\r\n        >\r\n          Download\r\n        </a>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n"]},"metadata":{},"sourceType":"module"}